
CREATE TABLE User_Profile (
	USER_ID	            INTEGER,
	FIRST_NAME          CHAR(30) NOT NULL,
	LAST_NAME           CHAR(30) NOT NULL,
	YEAR_OF_BIRTH       INTEGER,
	MONTH_OF_BIRTH      INTEGER,
	DAY_OF_BIRTH	    INTEGER,
	GENDER              CHAR(30),
	PRIMARY KEY (USER_ID)
);

CREATE TABLE User_Friends (
	USER2_ID    	    INTEGER,
	PRIMARY KEY (USER2_ID)
);

CREATE TABLE Has_Friends (
    USER1_ID            INTEGER,
    USER2_ID            INTEGER,
    PRIMARY KEY (USER1_ID, USER2_ID),
    FOREIGN KEY (USER1_ID) REFERENCES User_Profile,
    FOREIGN KEY (USER2_ID) REFERENCES User_Friends
);

CREATE TABLE User_Lives (
    USER_ID             INTEGER,
	CURRENT_CITY	    CHAR(30),
	CURRENT_STATE	    CHAR(30),
	CURRENT_COUNTRY	    CHAR(30),
    FOREIGN KEY (USER_ID) REFERENCES User_Profile
);

CREATE TABLE User_Home (
    USER_ID             INTEGER,
	HOMETOWN_CITY	    CHAR(30),
	HOMETOWN_STATE	    CHAR(30),
	HOMETOWN_COUNTRY	CHAR(30),
    FOREIGN KEY (USER_ID) REFERENCES User_Profile
);

CREATE TABLE User_College (
	INSTITUTION_NAME	CHAR(30),
	PROGRAM_YEAR    	INTEGER,
	PROGRAM_CONCENTRATION   CHAR(30),
	PROGRAM_DEGREE	    CHAR(30),
	PRIMARY KEY (INSTITUTION_NAME)
);

CREATE TABLE Attended_College (
    INSTITUTION_NAME    CHAR(30),
    USER_ID             INTEGER,
    PRIMARY KEY (INSTITUTION_NAME, USER_ID),
    FOREIGN KEY (INSTITUTION_NAME) REFERENCES User_College,
    FOREIGN KEY (USER_ID) REFERENCES User_Profile
);





CREATE TABLE Photo (
	PHOTO_ID        	INTEGER NOT NULL UNIQUE,
	PHOTO_CAPTION   	CHAR(30),
	PHOTO_CREATED_TIME	INTEGER NOT NULL,
	PHOTO_MODIFIED_TIME	INTEGER NOT NULL,
	PHOTO_LINK      	INTEGER NOT NULL UNIQUE,
	PRIMARY KEY(PHOTO_ID)
);

CREATE TABLE Photo_Tags (
	PHOTO_ID        	INTEGER NOT NULL UNIQUE,
	TAG_SUBJECT_ID  	INTEGER NOT NULL UNIQUE,
	TAG_X_COORDINATE	INTEGER NOT NULL,
	TAG_Y_COORDINATE	INTEGER NOT NULL,
	PRIMARY KEY (PHOTO_ID),
    FOREIGN KEY (PHOTO_ID) REFERENCES Photo,
    FOREIGN KEY (TAG_SUBJECT_ID) REFERENCES User_Profile
);

CREATE TABLE Photo_Album (
	ALBUM_ID        	INTEGER NOT NULL UNIQUE,
	OWNER_ID        	INTEGER NOT NULL UNIQUE,
	COVER_PHOTO_ID  	INTEGER NOT NULL UNIQUE,
	ALBUM_NAME      	CHAR(30) NOT NULL,
	ALBUM_CREATED_TIME	INTEGER NOT NULL,
	ALBUM_MODIFIED_TIME	INTEGER NOT NULL,
	ALBUM_LINK      	INTEGER NOT NULL UNIQUE,
	ALBUM_VISIBILITY	CHAR(30) NOT NULL,
	PRIMARY KEY (ALBUM_ID),
    FOREIGN KEY (OWNER_ID) REFERENCES User_Profile,
    FOREIGN KEY (COVER_PHOTO_ID) REFERENCES Photo
);

CREATE TABLE Album_Contains (
    PHOTO_ID            INTEGER NOT NULL UNIQUE,
    ALBUM_ID            INTEGER NOT NULL UNIQUE,
    PRIMARY KEY (PHOTO_ID),
    FOREIGN KEY (PHOTO_ID) REFERENCES Photo,
    FOREIGN KEY (ALBUM_ID) REFERENCES Photo_Album,
);

CREATE TABLE Make_Comment (
    PHOTO_ID            INTEGER NOT NULL UNIQUE,
    COMMENTOR_ID        INTEGER NOT NULL UNIQUE,
    USER_ID             INTEGER NOT NULL UNIQUE,
    PRIMARY KEY (PHOTO_ID, USER_ID),
    FOREIGN KEY (USER_ID) REFERENCES User_Profile,
    FOREIGN KEY (PHOTO_ID) REFERENCES Photo,
);




CREATE TABLE Event (
	EVENT_ID        	INTEGER NOT NULL UNIQUE,
	EVENT_CREATOR_ID   	INTEGER NOT NULL UNIQUE,
	EVENT_NAME      	CHAR(30) NOT NULL,
	EVENT_TAGLINE       CHAR(30),
	EVENT_DESCRIPTION	CHAR(100),
	EVENT_HOST      	INTEGER NOT NULL,
	EVENT_TYPE	        INTEGER NOT NULL,
	EVENT_SUBTYPE   	INTEGER NOT NULL,
	EVENT_LOCATION  	CHAR(30),
	EVENT_CITY      	CHAR(30),
	EVENT_STATE     	CHAR(30),
	EVENT_COUNTRY   	CHAR(30),
	EVENT_START_TIME	INTEGER NOT NULL,
	EVENT_END_TIME  	INTEGER NOT NULL,
	PRIMARY KEY(EVENT_ID)
);
;
;
;
;
